BetterDict:
- Make _raise_on_key_error and __str__ not take forever on large objects
- Add in keeping a set of values for a conflict_method
- Provide warning that changing key objects outside of the dict will break it
- Make sure everything works on subclassed HashableDict as well
- Do a pass over the code to check for efficiency/correctness
- make pretty printing of this default
- make pickleable

- Add all of the functionality into the docstring

Hashing:
- Create other hashable/better objects?

Other:
- Take notes on python typing
- Remember to use TypeGuard if needed
- add in functions for progressbars in and out of notebooks
- multiprocessing progress pool?
- allow hash_object to return int as well as string (return_type=str, can be int, str, 'int', 'str', etc.)
- add in hash_obj alias
- add in a strictly_equal() that cares about exact types and whatnot?
- multiprocessing threadpool things and map_with_progress
- munge inputs module with:
    - check strings
    - mutually exclusive inputs
    
    
Confusion matrix:
import matplotlib.pyplot as plt
from sklearn.metrics import ConfusionMatrixDisplay

conf_mat, labels = None, None

conf_mat = conf_mat / conf_mat.sum(axis=0)
conf_mat = conf_mat / conf_mat.sum(axis=1)
disp = ConfusionMatrixDisplay(conf_mat, display_labels=labels)
disp.plot()

plt.title('Title')
plt.show()
